name: Rust Test and Code Coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install llvm-dev libclang-dev clang lcov

    # Setup Rust toolchain
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    # Cache cargo dependencies
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # Run Tests
    - name: Run tests
      run: |
        export RUSTFLAGS="-Cinstrument-coverage"
        export LLVM_PROFILE_FILE="inst-decoding-8086-%p-%m.profraw"
        cargo test

    # Generate a coverage report
    - name: Generate coverage report
      run: |
        curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
        export PATH="$PATH:./"
        export CARGO_INCREMENTAL=0
        export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
        export RUSTDOCFLAGS="-Cpanic=abort"
        grcov . --binary-path ./target/debug/ -s . -t html --branch --llvm --ignore-not-existing --excl-line "GRCOV_EXCL_LINE" --excl-start "GRCOV_EXCL_START" --excl-stop "GRCOV_EXCL_STOP" -o ./target/debug/coverage/
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing  --excl-line "GRCOV_EXCL_LINE" --excl-start "GRCOV_EXCL_START" --excl-stop "GRCOV_EXCL_STOP" -o ./target/debug/lcov.info
        genhtml -o ./target/debug/ --show-details --highlight --ignore-errors source --legend ./target/debug/lcov.info

    # Optional: Upload the HTML coverage report somewhere, or upload to codecov.io
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        token: ${{secrets.CODECOV_TOKEN}}  # if needed
        files: ./target/debug/lcov.info
